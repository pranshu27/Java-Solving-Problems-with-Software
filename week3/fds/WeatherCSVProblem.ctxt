#BlueJ class context
comment0.params=
comment0.target=void\ tester()
comment1.params=parser
comment1.target=org.apache.commons.csv.CSVRecord\ coldestHourInFile(org.apache.commons.csv.CSVParser)
comment2.params=
comment2.target=java.lang.String\ fileWithColdestTemperature()
comment2.text=\r\n\ should\ return\ a\ string\ that\ is\ the\ name\ of\ the\ file\r\n\ from\ selected\ files\ that\ has\ the\ coldest\ temperature\r\n
comment3.params=parser
comment3.target=org.apache.commons.csv.CSVRecord\ lowestHumidityInFile(org.apache.commons.csv.CSVParser)
comment3.text=\r\n\ This\ method\ returns\ the\ CSVRecord\ that\ has\ the\ lowest\ humidity\r\n\r\n\ @param\ parser\r\n
comment4.params=parser
comment4.target=double\ averageTemperatureInFile(org.apache.commons.csv.CSVParser)
comment4.text=\r\n\ @param\ parser\r\n\ @return\r\n
comment5.params=parser\ level
comment5.target=double\ averageTemperatureWithHighHumidityInFile(org.apache.commons.csv.CSVParser,\ double)
comment5.text=\r\n\ This\ method\ returns\ a\ double\ that\ represents\ the\ average\ temperature\ of\ only\r\n\ those\ temperatures\ when\ the\ humidity\ was\ greater\ than\ or\ equal\ to\ value\r\n\r\n\ @param\ parser\r\n\ @param\ level\r\n
numComments=6
